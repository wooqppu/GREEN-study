
인터페이스 구현

1. 인터페이스 구현 기술 
JSON 
: AJAX에서 많이 사용되고, XML을 대체하는 데이터 포맷

XML 
: HTML의 단점을 보완한 인터넷 언어로, SGML의 복잡한 단점을 
개선한 특수한 목적을 갖는 마크업 언어 

AJAX 
: 자바스크립트를 사용해서 웹서버와 클라이언트간의 
비동기적으로 XML 데이터를 교환하고 조작, 
브라우저가 가진 XMLHttpRequest 객체를 이용해서 
새로 로드 안하고 일부데이터만 로드하는 기법,
하이퍼텍스트 표기언어(HTML)만으로는 어려운 작업을 웹페이지에서 구현함 

REST
: 웹같은 분산 하이퍼미디어 환경에서 자원의 존재/상태 정보를 
표준화된 HTTP 메서드로 주고받는 웹 아키텍처,
웹 창시자(HTTP) 중 1인 Roy Fielding의 2000년 논문에 의해서 소개됨,
구성요소 - 리소스(자원), 메서드(처리), 메시지


2. 인터페이스 데이터 포맷 
JSON : 속성-값 쌍 또는 키-값 쌍으로 이루어진 데이터 오브젝트를 전달하기 위해 
인간이 읽을 수 있는 텍스트를 사용하는 개방형 표준 포맷

특징
AJAX에서 많이 사용되고, XML을 대체하는 주요 데이터 포맷
언어 독립형 데이터 포맷, 다양한 데이터 프로그래밍 언어에서 사용
사람이 읽고 쓰기 용이, 기계가 분석하고 생성하기에 용이
표현 자료형


XML : HTML, SGML의 단점을 보완한 특수한 목적을 갖는 마크업 언어

특징
송수신 시스템 간 데이터 연계의 편의성을 위해 전송되는 데이터 구조를 동일한 형태로 정의
인간과 기계가 모두 이해할 수 있는 텍스트 형태로 마크업 포맷을 정의하기 위한 메타언어
사용자가 직접 문서의 태그를 정의할 수 있고, 다른 사용자가 정의한 태그를 사용할 수 있음
문서구조


3. JSON(JavaScript Object Notation)
데이터를 저장하거나 전송할 때 많이 사용되는 경량의 DATA 교환 형식으로,
Javascript에서 객체를 만들 때 사용하는 표현식을 의미한다.
JSON 표현식은 사람과 기계 모두 이해하기 쉬우며 용량이 작아서, 
최근에는 JSON이 XML을 대체해서 데이터 전송 등에 많이 사용한다.
JSON은 데이터 포맷일 뿐이며 어떠한 통신 방법도, 프로그래밍 문법도 아닌 
단순히 데이터를 표시하는 표현 방법일 뿐이다.


4. XML (eXtensible Markup Language)
Extensible Markup Language(XML)를 사용하면 공유 가능한 방식으로 데이터를 정의하고 저장할 수 있다.
XML은 웹 사이트, 데이터베이스 및 타사 애플리케이션과 같은 컴퓨터 시스템 간의 정보 교환을 지원한다. 
사전 정의된 규칙을 사용하면 수신자가 이러한 규칙을 사용하여 데이터를 효율적으로 정확하게 읽을 수 있으므로 
모든 네트워크에서 데이터를 XML 파일로 손쉽게 전송할 수 있다.

5. 데이터 암호화 
암호화는 사이버 보안을 사용하여 무차별 암호 대입, 그리고 맬웨어 및 랜섬웨어를 포함하는 
사이버 공격으로부터 데이터를 보호한다. 
데이터 암호화의 작동 방식은 클라우드 및 컴퓨터 시스템에서 
전송된 디지털 데이터를 보호하는 것이다. 

디지털 데이터에는 두 가지 종류가 있는데, 전송된 데이터 또는 이동 중인 데이터, 
그리고 저장된 디지털 데이터 또는 미사용 데이터가 있다.

암호화 방법은 여러 가지가 존재하며, 이들은 각기 다른 보안 및 보안 요구 사항을 염두에 두고 개발되었다. 
데이터 암호화의 두 가지 주요 유형은 비대칭 암호화와 대칭 암호화이다.

비대칭 암호화는 공개 키 암호화라고도 알려져 있으며, 두 개의 개별 암호화 대칭 키를 사용하여 
데이터를 암호화 및 해독합니다. 이 두 개의 키는 ‘공개 키’와 ‘개인 키’라고도 한다.

대칭 암호화는 하나의 비밀 대칭 키를 사용해 일반 텍스트를 암호화하고 
암호 텍스트를 해독하는 암호화 유형이다.
