
데이터베이스 설정하기 

1. 유저 설정하기 
create user green identified by 1234;

권한 설정
grant connect, resource to green;
grant create table to green;
grant create sequence to green;


2. member 테이블 생성하기 
create table member (
	id varchar2(10) not null,
	pass varchar2(20) not null,
	name varchar2(30) not null,
	regidate date default sysdate not null,
	primary key (id)
);


3. board 테이블 생성하기 
create table board (
	num number primary key,
	title varchar2(200) not null,
	content varchar2(2000) not null,
	id varchar2(10) not null,
	postdate date default sysdate not null,
	visitcount number(6)
);


4. 시퀀스 생성하기 
create sequence seq_board_num 
increment by 1 
start with 1
minvalue 1
nomaxvalue
nocycle
nocache;


5. 데이터 입력하기 
insert into board(num, title, content, id, postdate, visitcount)
values(seq_board_num.nextval, '제목1', '내용1입니다.','green',sysdate,0); 

select * from board;




JDBC 설정 및 데이터베이스 연결
JDBC(JAVA DATABASE CONNECTIVITY)
데이터베이스 연결 및 관리 작업을 할 때 사용하는 API
JDBC API 사용하려면 JDBC 드라이버가 있어야함 

JDBC 드라이버 설정 

C:\oraclexe\app\oracle\app\oracle\product\11.2.0\server\jdbc\lib
ojdbc6.jar 파일 복사 
이클립스 열기 ()
el_chal04 폴더 생성 - src - main - webapp - web-inf - lib 폴더에 붙여넣기 



세션 로그인 
클라이언트의 상태 정보를 서버에 저장 
클라이언트가 서버에 접속해있는 동안 그 상태를 유지하는게 목적 

1) 유지 시간 설정 
web.xml 파일에서 설정 
분 단위 설정 
<session-config>
	<session-timeout>20</session-timeout>
</session-config>

session.setMaxInactiveInterval(1800) -> 초 단위 


2) loginForm.jsp 생성


3) DTO클래스와 DAO클래스 생성
DTO(Data Transfer Object) : 데이터를 교환하기 위해 생성하는 객체
멤버변수(속성)와 그 속성에 접근하기 위한 getter/setter만 갖춘게 특징 
값 객체라고도 함 

각 테이블 당 하나씩 생성, 테이블 컬럼과 동일한 멤버 변수를 가짐 

DAO(Data Access Object) : 데이터베이스의 데이터에 접근하기 위한 객체 
보통 JDBC를 통해 구현하며, 하나의 테이블에서 수행할 수 있는 
CRUD를 전담함 

Create 생성, Read 읽기, Update 수정(갱신), Delete 삭제 작업을 말함 


