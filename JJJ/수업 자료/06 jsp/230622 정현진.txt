
페이지 모듈화 

1. <jsp:include> 액션 태그를 활용한 공통 영역 작성 
공통 구성 요소를 위한 코드를 모든 페이지마다 작성하지 않고 
따로 페이지를 만들어서 사용하는 액션 태그

1) 액션 태그 사용법
<jsp:include page = "포함할 페이지" flush = "false" />
page : 포함할 jsp 페이지의 경로를 작성 
flush : 지정한 jsp 페이지를 실행하기 전에 
출력 버퍼를 flush 할지 지정 -> 기본값은 false임


2. param 액션태그 
현재 jsp 페이지에서 다른 페이지로 정보를 전달하는 태그 
단독으로 사용되지 않으며 <jsp:forward>, <jsp:include> 태그의
내부에서 사용 

ex>
<jsp:include>
	<jsp:param name = "매개변수 명" value = "값" />
</jsp:include>

header.jsp
request.getParameter("매개변수명");


디렉티브 include 처리 방식과 사용법 
1. 디렉티브 사용 방법 
<%@ include file = "파일경로" %>

jsp 파일을 자바 파일로 변환하기 전애 include 디렉티브에서 지정한 
파일의 내용을 해당 위치에 삽입하고 그 결과로 생긴 자바 파일을 컴파일함

include 되는 파일의 확장자는 jsp, jspf로 변경하면 오류 안뜸

2. <jsp:include> 액션 태그 
처리 속도 : 요청 시간에 처리 
별도의 파일로 요청 처리 흐름을 이동 
<jsp:param>을 이용해서 데이터 전달

화면의 레이아웃 일부분을 모듈화할 때 사용


3. include 디렉티브 
jsp 파일을 자바소스로 변환할 때 처리
현재 파일에 삽입시킴 
페이지 내에서 변수를 지정하고 변수의 값 지정 

다수의 jsp 페이지에서 공통으로 사용되는 변수를 
지정하는 코드나 저작권 같은 문장을 나타낼 때 사용 



<jsp:forward> 액션태그 
기본 문법 : <jsp:forward page = "이동할 페이지">



자바빈과 액션태그

자바빈 
동적 컨텐츠 개발을 위해 자바 코드를 사용하여 자바 클래스로
로직을 작성하는 방법

jsp 페이지에서 화면을 표현하기 위한 계산식이나 자료의 처리를 
담당하는 자바 코드를 따로 분리하여 작성하는 것  

- 클래스 (객체를 만들기 위한 설계도)

public class Member {

}

Member member1 = new Member();


- 자바빈 클래스 만들기 
인수가 없는 기본 생성자 

모든 멤버 변수는 private으로 설정 

모든 멤버 변수는 getter / setter 메소드가 존재해야함 

MemberInfo

id, password, name, address, email 


<jsp:useBean> 액션태그 사용하여 객체 생성하기 

<jsp:useBean id="" class="" scope="" />
id : jsp 페이지에서 자바빈 객체에 접근할 때 사용할 이름 
class : 패키지 이름을 포함한 자바빈 클래스의 완전한 이름을 입력
scope : 자바빈 객체를 저장할 영역을 지정 

pagem request, session, application



